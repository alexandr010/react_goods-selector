{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","messageSelectGood","length","firstWorlds","slice","lastWorld","join","addGood","item","setState","removeGood","filter","el","resetGood","className","this","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,kBAAoB,WAClB,IAAQD,EAAiB,EAAKD,MAAtBC,aAER,GAAuC,IAAnC,EAAKD,MAAMC,aAAaE,OAC1B,MAAM,GAAN,OAAUF,EAAV,gBAGF,GAAI,EAAKD,MAAMC,aAAaE,OAAS,EAAG,CACtC,IAAMC,EAAcH,EAAaI,MAAM,EAAGJ,EAAaE,OAAS,GAC1DG,EAAYL,EAAaA,EAAaE,OAAS,GAErD,MAAM,GAAN,OAAUC,EAAYG,KAAK,MAA3B,gBAAwCD,EAAxC,iBAGF,MAAO,qB,EAGTE,QAAU,SAACC,GACT,EAAKC,UAAS,SAACV,GACb,MAAO,CACLC,aAAa,GAAD,mBACPD,EAAMC,cADC,CAEVQ,S,EAMRE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACV,GACb,MAAO,CACLC,aAAcD,EAAMC,aAAaW,QAAO,SAAAC,GAAE,OAAIJ,IAASI,U,EAK7DC,UAAY,WACV,EAAKJ,SAAS,CAAET,aAAc,M,4CAGhC,WAAU,IAAD,OACP,OACE,sBAAKc,UAAU,MAAf,UACE,kDAEG,IACAC,KAAKd,uBAER,qBAAKa,UAAU,eAAf,SACIC,KAAKhB,MAAMC,aAAaE,OAAS,GACjC,wBACEc,KAAK,SACLF,UAAU,sBACVG,QAASF,KAAKF,UAHhB,qBASJ,oBAAIC,UAAU,OAAd,SACGjB,EAAgBqB,KAAI,SAACV,GAAD,OACnB,qBAEEM,UAAW,EAAKf,MAAMC,aAAamB,SAASX,GACxC,cACA,YAJN,UAMGA,EACC,EAAKT,MAAMC,aAAamB,SAASX,GAa/B,wBACEQ,KAAK,SACLF,UAAU,0BACVG,QAAS,kBACP,EAAKP,WAAWF,IAJpB,oBAXA,wBACEQ,KAAK,SACLF,UAAU,0BACVG,QAAS,kBACP,EAAKV,QAAQC,IAJjB,mBARCA,e,GAnEDY,IAAMC,WAuGTvB,IC1HfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2cfd632.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  messageSelectGood = () => {\n    const { selectedGood } = this.state;\n\n    if (this.state.selectedGood.length === 1) {\n      return `${selectedGood} is selected`;\n    }\n\n    if (this.state.selectedGood.length > 1) {\n      const firstWorlds = selectedGood.slice(0, selectedGood.length - 1);\n      const lastWorld = selectedGood[selectedGood.length - 1];\n\n      return `${firstWorlds.join(', ')} and ${lastWorld} are selected`;\n    }\n\n    return 'No goods selected';\n  };\n\n  addGood = (item: string) => {\n    this.setState((state) => {\n      return {\n        selectedGood: [\n          ...state.selectedGood,\n          item,\n        ],\n      };\n    });\n  };\n\n  removeGood = (item: string) => {\n    this.setState((state) => {\n      return {\n        selectedGood: state.selectedGood.filter(el => item !== el),\n      };\n    });\n  };\n\n  resetGood = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good: -\n          {' '}\n          {this.messageSelectGood()}\n        </h1>\n        <div className=\"block-button\">\n          {(this.state.selectedGood.length < 1) || (\n            <button\n              type=\"button\"\n              className=\"button reset-button\"\n              onClick={this.resetGood}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul className=\"list\">\n          {goodsFromServer.map((item) => (\n            <li\n              key={item}\n              className={this.state.selectedGood.includes(item)\n                ? 'active-item'\n                : 'list-item'}\n            >\n              {item}\n              {!this.state.selectedGood.includes(item)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"button list-item-button\"\n                    onClick={() => (\n                      this.addGood(item))}\n                  >\n                    Add\n                  </button>\n                )\n\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"button list-item-button\"\n                    onClick={() => (\n                      this.removeGood(item))}\n                  >\n                    Remove\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}